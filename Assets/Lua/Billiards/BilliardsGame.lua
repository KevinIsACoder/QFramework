---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lengyouyi.
--- DateTime: 2022/3/16 15:05
---

---@class --BillardsMain 游戏入口文件

local BilliardsGame = class("BilliardsGame", GameBase)

function BilliardsGame:OnEnter()
    self:SetWindowMode(GameWindowMode.MAX_SIZE)
    Input.multiTouchEnabled = false
    -- background
    local bgPrefab = Spark.Assets.LoadAsset("Game/Billiards/Views/Background.prefab", typeof(GameObject))
    self.bgPrefab = Object.Instantiate(bgPrefab, Vector3.zero, Quaternion.identity)
    
    BilliardsAudio.PlayBackground("Billiards_BGM_01", 1)
    -- App.uiRoot:Open(UIBilliardsContainer)
    BilliardsProxy.RegisterEvent(self.eventManager)
    self:RegisterEvent()
end

function BilliardsGame:RegisterEvent()
    local BillardsEventType = BillardsEvent.BillardsEventType
    self.eventManager:Add(BillardsEventType.E_BreakRule, function(_, data)
        BilliardsBattle.OnBreakRule(data)
    end)

    self.eventManager:Add(BillardsEventType.E_NoticeShotBall, function(_, data)
        BilliardsBattle.NoticeShotBall(data)
    end)

    -- self.eventManager:Add(EventDef.E_Battle_GameType, function(_, data)
    --     BilliardsBattle.UpdateModeType()
    -- end)

    self.eventManager:Add(BillardsEventType.E_BeginGame, function(_, data)
        self:BeginRound(data)
    end)

    self.eventManager:Add(BillardsEventType.E_ExitGame, function(_, data)
        self:ExitRound()
    end)

    self.eventManager:Add(BillardsEventType.E_BeginRound, function(_, data)
        App.uiRoot:CloseAll(false)
        App.uiRoot:Open(UIBilliardsMain)
        App.uiRoot:Open(UIBilliardsMenu)
        -- self.view.popViewRoot:CloseAll(false)
        -- self.view.panelViewRoot:CloseAll(false)
        -- self.view.panelViewRoot:Open(UIBilliardsMain, UIContext.Get({content = self.view.content}))
    end)

    self.eventManager:Add(BillardsEventType.E_EndRound, function()
        App.uiRoot:CloseAll(false)
        App.uiRoot:Open(UIBilliardsReady)
        App.uiRoot:Open(UIBilliardsMenu)
        -- self.view.panelViewRoot:CloseAll(false)
        -- self.view.panelViewRoot:Open(UIBilliardsReady)
    end)

end

function BilliardsGame:BeginRound(data)
    BilliardsBattle.NewMatch(data)
    EventManager.Dispatch(BillardsEvent.BillardsEventType.E_BeginRound)
end

function BilliardsGame:ExitRound()
    BilliardsTable.Clear()
    EventManager.Dispatch(BillardsEvent.BillardsEventType.E_EndRound)
end

function BilliardsGame:OnExit()
    App.uiRoot:CloseAll(true)
    BilliardsTable.Destroy()
    GameObject.Destroy(self.bgPrefab)
end

-- 标记游戏是否支持通用刷新方案
function BilliardsGame:IsSupportGenericRefresh()
    return true
end

function BilliardsGame:IsSupportGenericVoiceSeat()
    return true
end

function BilliardsGame:IsSupportWindowMode()
    return true
end

-- 准备阶段
function BilliardsGame:OnPrepare()
    self:ExitRound()
end

-- 重置画面
function BilliardsGame:OnRefresh(data)
    self:BeginRound(data)
end

return BilliardsGame
